const webpack = require('webpack');
const OptimizeJsPlugin = require("optimize-js-plugin");
const JavaScriptObfuscator = require('webpack-obfuscator');
module.exports = require('./webpack.config.js');

module.exports.plugins = module.exports.plugins || [];
module.exports.plugins.unshift(
    new webpack.DefinePlugin({
        DEBUG: false
    }),
    new OptimizeJsPlugin({
        sourceMap: false
    }),
    new webpack.optimize.UglifyJsPlugin({
        compress: {
            warnings: false
        },
        output: {
            comments: false,
        },
    }),
    new JavaScriptObfuscator({
        compact: true,
        controlFlowFlattening: false,
        controlFlowFlatteningThreshold: 0,
        deadCodeInjection: false,
        deadCodeInjectionThreshold: 0,
        debugProtection: false,
        debugProtectionInterval: false,
        disableConsoleOutput: true,
        log: false,
        mangle: true,
        renameGlobals: false,
        reservedNames: [],
        rotateStringArray: true,
        seed: 0,
        selfDefending: true,
        stringArray: true,
        stringArrayEncoding: false,
        stringArrayThreshold: 0.75,
        unicodeEscapeSequence: false,
        rotateUnicodeArray: true
    }, ["library.bundle.js"]),
);
module.exports.module.loaders = [
    { test: /\.ts$/, exclude: /node_modules/, loader: "babel-loader!ts-loader" },
    { test: /\.js$/, include: /src/, loader: "babel-loader" },
    {
        test: /\.png$/i,
        loaders: ['file-loader?name=[hash].[ext]', {
            loader: 'image-webpack-loader',
            query: {
                // 下面兩行擇一，webp檔案較小、壓縮速度較快，但safari不支援
                pngquant: { floyd: 1, quality: '10-90', speed: 1, },
                // optipng: { enabled: false }, pngquant: { enabled: false }, webp: { quality: 75 }
            },
        }],
        exclude: /(^node_modules$)|(favicon\.png$)/,
    },
    { test: /assets(?=\/|\\)/, exclude: /\.png$/i, loader: "file-loader?name=[hash].[ext]" },
    { test: /\.html?$/, loader: "file-loader?name=[name].[ext]" },
    { test: /\.css$/, loader: 'style-loader!css-loader' },
    { test: /\.svg$/, loader: 'svg-inline-loader' },
];
